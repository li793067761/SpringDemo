<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<description>Spring MVC Configuration</description>
	
	<!-- 扫描controller注解 -->
	<context:component-scan base-package="com.galaxy.demo" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 自动注册处理controller业务的其他的bean,如处理异常,处理请求映射 -->
	<!-- 标签可展开,在其中手动注册如return-value-handlers(处理特定的返回结果类型),argument-resolvers(处理传入的参数或注解),message-converters(对requestBody或responseBody传入或传出的报文进行解析) -->
	<!-- 默认的解析器为org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<!-- 可使用content-negotiation-manager属性修改为自定义的处理器bean -->
	<mvc:annotation-driven />
	
	<!-- 自定义视图文件解析 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<!-- 如果Web应用服务器的默认Servlet名称不是"default"，需要通过default-servlet-name指定 -->
	<mvc:default-servlet-handler />
	
	<!-- 静态资源映射,这里的cache-period指的是mvc缓存静态资源的时间,这里是1年 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
    
    <!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/index"/>
	
	<!-- 定义抛异常时跳转的页面 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
			</property>
	</bean>
	
</beans>
